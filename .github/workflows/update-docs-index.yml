name: Update Documentation Index

on:
  push:
    branches: [main, master]
    paths:
      - "docs/**/*.md"
      - "Next/**/*.md"
      - "React/**/*.md"
      - "Others/**/*.md"
      - ".github/workflows/update-docs-index.yml"
  pull_request:
    branches: [main, master]
    paths:
      - "docs/**/*.md"
      - "React/**/*.md"
      - "Next/**/*.md"
      - "Others/**/*.md"

permissions:
  contents: write
  pull-requests: write

jobs:
  update-docs-index:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug file structure
        run: |
          echo "=== Repository structure ==="
          find . -name "*.md" -type f | head -20
          echo ""
          echo "=== React folder contents ==="
          if [ -d "React" ]; then
            ls -la React/
            echo "React .md files:"
            find React -name "*.md" -type f | head -10
          else
            echo "React folder not found"
          fi
          echo ""
          echo "=== Next folder contents ==="  
          if [ -d "Next" ]; then
            ls -la Next/
            echo "Next .md files:"
            find Next -name "*.md" -type f | head -10
          else
            echo "Next folder not found"
          fi
          echo ""
          echo "=== Others folder contents ==="
          if [ -d "Others" ]; then
            ls -la Others/
            echo "Others .md files:"
            find Others -name "*.md" -type f | head -10
          else
            echo "Others folder not found"
          fi
          echo ""
          echo "=== docs folder contents ==="
          if [ -d "docs" ]; then
            ls -la docs/
            echo "docs .md files:"
            find docs -name "*.md" -type f | head -10
          else
            echo "docs folder not found"
          fi

      - name: Generate documentation index
        run: |
          INDEX_FILE="temp_docs_index.md"

          echo "## 📚 Documentation" > $INDEX_FILE
          echo "" >> $INDEX_FILE

          # React 문서
          if [ -d "React" ] && [ "$(find React -name "*.md" -type f | wc -l)" -gt 0 ]; then
            echo "### 📖 React" >> $INDEX_FILE
            echo "" >> $INDEX_FILE
            
            find React -name "*.md" -type f | sort | while read file; do
              title=$(head -20 "$file" | grep -m 1 "^# " | sed 's/^# //' 2>/dev/null || basename "$file" .md)
              
              if [ -z "$title" ]; then
                title=$(basename "$file" .md)
              fi
              
              echo "- [$title](./$file)" >> $INDEX_FILE
            done
            echo "" >> $INDEX_FILE
          fi

          # Next 문서
          if [ -d "Next" ] && [ "$(find Next -name "*.md" -type f | wc -l)" -gt 0 ]; then
            echo "### 🚀 Next" >> $INDEX_FILE
            echo "" >> $INDEX_FILE
            
            find Next -name "*.md" -type f | sort | while read file; do
              title=$(head -20 "$file" | grep -m 1 "^# " | sed 's/^# //' 2>/dev/null || basename "$file" .md)
              
              if [ -z "$title" ]; then
                title=$(basename "$file" .md)
              fi
              
              echo "- [$title](./$file)" >> $INDEX_FILE
            done
            echo "" >> $INDEX_FILE
          fi

          # Others 문서
          if [ -d "Others" ] && [ "$(find Others -name "*.md" -type f | wc -l)" -gt 0 ]; then
            echo "### 📝 Others" >> $INDEX_FILE
            echo "" >> $INDEX_FILE
            
            find Others -name "*.md" -type f | sort | while read file; do
              title=$(head -20 "$file" | grep -m 1 "^# " | sed 's/^# //' 2>/dev/null || basename "$file" .md)
              
              if [ -z "$title" ]; then
                title=$(basename "$file" .md)
              fi
              
              echo "- [$title](./$file)" >> $INDEX_FILE
            done
            echo "" >> $INDEX_FILE
          fi

          # docs 폴더 (기존 docs 폴더가 있다면)
          if [ -d "docs" ] && [ "$(find docs -name "*.md" -type f | wc -l)" -gt 0 ]; then
            echo "### 📋 Documentation" >> $INDEX_FILE
            echo "" >> $INDEX_FILE
            
            find docs -name "*.md" -type f | sort | while read file; do
              title=$(head -20 "$file" | grep -m 1 "^# " | sed 's/^# //' 2>/dev/null || basename "$file" .md)
              
              if [ -z "$title" ]; then
                title=$(basename "$file" .md)
              fi
              
              echo "- [$title](./$file)" >> $INDEX_FILE
            done
            echo "" >> $INDEX_FILE
          fi

          # 기타 중요 문서들
          echo "### 📋 Other Documents" >> $INDEX_FILE
          echo "" >> $INDEX_FILE

          for file in CONTRIBUTING.md CHANGELOG.md LICENSE.md CODE_OF_CONDUCT.md; do
            if [ -f "$file" ]; then
              title=$(head -20 "$file" | grep -m 1 "^# " | sed 's/^# //' 2>/dev/null || basename "$file" .md)
              if [ -z "$title" ]; then
                title=$(basename "$file" .md)
              fi
              echo "- [$title](./$file)" >> $INDEX_FILE
            fi
          done

          echo "Generated documentation index:"
          cat $INDEX_FILE
          echo ""
          echo "=== Final verification ==="
          echo "Total .md files found:"
          find . -name "*.md" -type f | wc -l
          echo "Index file size:"
          wc -l $INDEX_FILE

      - name: Update README.md
        run: |
          INDEX_FILE="temp_docs_index.md"

          if [ ! -f "README.md" ]; then
            echo "README.md not found, creating new one"
            echo "# Project Documentation" > README.md
            echo "" >> README.md
            echo "<!-- DOCS_INDEX_START -->" >> README.md
            echo "<!-- DOCS_INDEX_END -->" >> README.md
          fi

          if ! grep -q "<!-- DOCS_INDEX_START -->" README.md; then
            echo "" >> README.md
            echo "<!-- DOCS_INDEX_START -->" >> README.md
            echo "<!-- DOCS_INDEX_END -->" >> README.md
          fi

          awk '
            /<!-- DOCS_INDEX_START -->/ { 
              print $0
              system("cat '$INDEX_FILE'")
              skip=1
              next
            }
            /<!-- DOCS_INDEX_END -->/ { 
              skip=0
            }
            !skip
          ' README.md > README_new.md

          mv README_new.md README.md
          rm $INDEX_FILE

          echo "Updated README.md with new documentation index"

      - name: Check for changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push changes
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git config --local user.email "abgoeun3339@gmail.com"
          git config --local user.name "goeun23"
          git add README.md
          git commit -m "📚 Auto-update documentation index and changelog"
          git push
